grammar marianaAntlrParser;

@header{
package co.edu.eafit.dis.st0270.p20151.mariana.pl0.parser;
}

IDENTIFIER  :    ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;

INT : ('1'..'9')('0'..'9')* | ('0')*
  ;


WHITESPACE  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        | '\f'
        | '\r\n'
      ) ->skip ;


factor :  IDENTIFIER
         | INT
         | '('expr')'
         ;

term : (factor (('*'|'/') factor))*
     ;

expr : ('+'|'-')? term (('+'|'-') term)*
     ;

condition : 'odd' expr 
            | expr ('<'|'='|'<>'|'<='|'>'|'>=') expr
          ;

instruction : IDENTIFIER ':=' expr
              |'call' IDENTIFIER
              |'begin' instruction (';' instruction)* (';')? 'end'
              |'if' condition 'then' instruction
              |'while' condition 'do' instruction
              | 
            ;

defproc : 'procedure' IDENTIFIER ';' block ';' 
        ; 

defvar : 'var' IDENTIFIER (';' IDENTIFIER)* ';'
       ;

defconst : 'const' IDENTIFIER '=' INT (',' IDENTIFIER '=' INT)* ';'
         ;

block : (defconst)?(defvar)?(defproc)* instruction
      ;

prog : (block '.')
        ;

CHAR : (.);
